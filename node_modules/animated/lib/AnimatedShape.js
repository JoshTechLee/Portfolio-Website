var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var AnimatedWithChildren=require('./AnimatedWithChildren');
var AnimatedValue=require('./AnimatedValue');
var Animated=require('./Animated');
var guid=require('./guid');

var hasOwnProperty=Object.prototype.hasOwnProperty;

function isOwnProperty(obj,key){
return hasOwnProperty.call(obj,key);}


function makeShape(shape,ret){
if(shape instanceof Animated){
return shape;}else 
if(shape instanceof Array){
return shape.map(function(val){return makeShape(val,{});});}else 
{
switch(typeof shape){
case 'object':
for(var key in shape){
if(isOwnProperty(shape,key)){
ret[key]=makeShape(shape[key],{});}}


return ret;
case 'number':
case 'string':
return new AnimatedValue(value);
default:
return value;}}


return ret;}


function getValue(shape,ret){
if(shape instanceof Animated){
return shape.__getValue();}else 
if(shape instanceof Array){
return shape.map(function(val){return getValue(val,{});});}else 
{
switch(typeof shape){
case 'object':
for(var key in shape){
if(isOwnProperty(shape,key)){
ret[key]=getValue(shape[key],{});}}


return ret;
default:
return value;}}


return ret;}


function _setValue(shape,obj){
if(shape instanceof Animated){
return shape.setValue(obj);}else 
if(shape instanceof Array){
return shape.map(function(val,i){return _setValue(val,obj[i]);});}else 
{
switch(typeof shape){
case 'object':
for(var key in shape){
if(isOwnProperty(shape,key)){
_setValue(shape[key],obj[key]);}}


break;}}}




function _setOffset(shape,obj){
if(shape instanceof Animated){
shape.setOffset(obj);}else 
if(shape instanceof Array){
return shape.map(function(val,i){return _setOffset(val,obj[i]);});}else 
{
switch(typeof shape){
case 'object':
for(var key in shape){
if(isOwnProperty(shape,key)){
_setOffset(shape[key],obj[key]);}}


break;}}}




function getAnimateds(shape,animateds){
if(shape instanceof Animated){
animateds.push(shape);}else 
if(shape instanceof Array){
return shape.map(function(val){return getAnimateds(val,animateds);});}else 
{
switch(typeof shape){
case 'object':
for(var key in shape){
if(isOwnProperty(shape,key)){
ret[key]=getAnimateds(shape[key],animateds);}}


break;}}


return animateds;}


function forEachAnimated(shape,match,fn){
if(shape instanceof Animated){
fn(shape,match);}else 
if(shape instanceof Array){
shape.map(function(val,i){return forEachAnimated(val,match[i],fn);});}else 
{
switch(typeof shape){
case 'object':
for(var key in shape){
if(isOwnProperty(shape,key)){
forEachAnimated(shape[key],match[key],fn);}}


break;}}}var 




AnimatedShape=function(_AnimatedWithChildren){_inherits(AnimatedShape,_AnimatedWithChildren);




function AnimatedShape(shape){_classCallCheck(this,AnimatedShape);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedShape).call(this));

_this._shape=makeShape(shape,{});
_this._children=getAnimateds(_this._shape);
_this._listeners={};return _this;}_createClass(AnimatedShape,[{key:'setValue',value:function setValue(


value){
_setValue(this._shape,value);}},{key:'setOffset',value:function setOffset(


offset){
_setOffset(this._shape,offset);}},{key:'flattenOffset',value:function flattenOffset()


{
this._children.forEach(function(child){return child.flattenOffset();});}},{key:'__getValue',value:function __getValue()


{
return getValue(this._shape,{});}},{key:'__attach',value:function __attach()


{var _this2=this;
this._children.forEach(function(child){return child.__addChild(_this2);});}},{key:'__detach',value:function __detach()


{var _this3=this;
this._children.forEach(function(child){return child.__removeChild(_this3);});}},{key:'stopAnimation',value:function stopAnimation(


callback){
this._children.forEach(function(child){return child.stopAnimation();});
callback&&callback(this.__getValue());}},{key:'addListener',value:function addListener(


callback){var _this4=this;
var id=guid();
var jointCallback=function(_ref){var number=_ref.value;
callback(_this4.__getValue());};

this._listeners[id]=this._children.map(function(value){return value.addListener(jointCallback);});
return id;}},{key:'removeListener',value:function removeListener(


id){
var listeners=this._listeners[id];
this._children.forEach(function(value,i){return value.removeListener(listeners[i]);});
delete this._listeners[id];}},{key:'spring',value:function spring(


config){
var animations=[];
forEachAnimated(
this._shape,
config.toValue,
function(anim,value){
animations.push(timing(anim,_extends({},
config,{
toValue:value})));});



return parallel(animations);}},{key:'timing',value:function timing(


config){
var animations=[];
forEachAnimated(
this._shape,
config.toValue,
function(anim,value){
animations.push(decay(anim,_extends({},
config,{
toValue:value})));});



return parallel(animations);}}]);return AnimatedShape;}(AnimatedWithChildren);



module.exports=AnimatedShape;